import { registerInstance as __stencil_registerInstance } from "@stencil/core";
export const CatGif = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        /**
         * Internal state
         */
        this.images = [];
    }
    async fetchGifs() {
        const key = 'gwWthNT5DFpvrh04kt4PYiakYO12aM3B';
        let keywords = `cat`;
        if (this.getAttribute('keyword')) {
            keywords += ` ${this.getAttribute('keyword')}`;
        }
        const url = `${window.location.protocol}//api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(keywords)}`;
        const result = await fetch(url);
        const JSONresult = await result.json();
        this.images = JSONresult.data.map(item => item.images.original.url);
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:cat-gif"; }
};
await private;
getRandomImage();
string;
{
    if (!this.images.length) {
        await this.fetchGifs();
    }
    return this.images[Math.floor(Math.random() * this.images.length)];
}
render();
{
    this.images;
    return h("img", { src: "", alt: `Cat${this.keyword ? ' ' + this.keyword : ''} gif` });
}
